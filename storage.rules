rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Forms - form creators can upload attachments, public can read
    match /forms/{formId}/{allPaths=**} {
      allow read: if true; // Public read for form attachments
      allow write: if request.auth != null && 
        request.auth.uid == get(/databases/$(database)/documents/forms/$(formId)).data.createdBy;
    }
    
    // Submissions - form owners and submitters can access
    match /submissions/{submissionId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.metadata.submitterId || 
         request.auth.uid == get(/databases/$(database)/documents/forms/$(resource.metadata.formId)).data.createdBy);
    }
    
    // User avatars - users can manage their own avatars
    match /users/{userId}/avatar/{fileName} {
      allow read: if true; // Public read for user avatars
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Profile images - users can manage their own images
    match /users/{userId}/images/{fileName} {
      allow read: if true; // Public read for profile images
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Temporary uploads - allow authenticated users to upload temporarily
    match /temp/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Note: Implement cleanup function to remove temp files after 24 hours
    }
    
    // Public assets - anyone can read
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false; // Only functions can write
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
