rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // TEMPORARY DEBUG RULES - ALLOW ALL OPERATIONS
    // TODO: Restore proper security after debugging
    
    // Allow all operations on all collections for debugging
    match /{document=**} {
      allow read, write: if true;
    }
    
    // TODO: Restore proper security rules after debugging:
    // Forms - users can only access their own forms
    // match /forms/{formId} {
    //   allow read, write: if request.auth != null && request.auth.uid == resource.data.createdBy;
    //   allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
    //   allow read: if true; // Allow anyone to read forms for now
    // }
    
    // Submissions - TEMPORARILY allow all operations for debugging
    // match /submissions/{submissionId} {
    //   allow read, write, create: if true;
    // }
    
    // Notifications - users can only access their own notifications
    // match /notifications/{notificationId} {
    //   allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    //   allow create: if request.auth != null;
    // }
    
    // Form Links - form owners can manage their form links
    // match /formLinks/{linkId} {
    //   allow read, write: if request.auth != null && request.auth.uid == resource.data.createdBy;
    //   allow read: if request.auth != null && resource.data.isPublic == true;
    // }
    
    // Email Logs - only system can write, users can read their own
    // match /emailLogs/{logId} {
    //   allow read: if request.auth != null && 
    //     (request.auth.uid == resource.data.userId || 
    //      request.auth.uid == get(/databases/$(database)/documents/forms/$(resource.data.formId)).data.createdBy);
    //   allow write: if false; // Only functions can write
    // }
    
    // User Profiles - users can read/write their own profile
    // match /users/{userId} {
    //   allow read, write: if request.auth != null && request.auth.uid == userId;
    // }
    
    // Public form submissions (for anonymous users) - legacy collection, can be removed
    // match /publicSubmissions/{submissionId} {
    //   allow create: if true; // Allow anonymous submissions
    //   allow read: if request.auth != null && 
    //     request.auth.uid == get(/databases/$(database)/documents/forms/$(resource.data.formId)).data.createdBy;
    // }
  }
} 